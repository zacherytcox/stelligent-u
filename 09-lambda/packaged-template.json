AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  UbuntuAMI:
    Type: String
    Default: /aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id
  VPCID:
    Type: String
  SubnetID:
    Type: String
  TagUser:
    Type: String
  TagLesson:
    Type: String
  TagLab:
    Type: String
  KeyName:
    Type: String
Resources:
  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action: sts:AssumeRole
      Description: String
      Policies:
      - PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: AWSCloudTrailCreateLogStream20141101
            Effect: Allow
            Action:
            - lambda:*
            Resource:
            - '*'
          - Sid: AWSCloudTrailPutLogEvents20141101
            Effect: Allow
            Action:
            - logs:*
            Resource:
            - '*'
        PolicyName: Policy
      Tags:
      - Key: user
        Value:
          Ref: TagUser
      - Key: stelligent-u-lesson
        Value:
          Ref: TagLesson
      - Key: stelligent-u-lab
        Value:
          Ref: TagLab
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: zachs3buckettesting12843
        S3Key: adfb85c9e4e26e2d4637d4be9bdcf66e
      Role:
        Fn::GetAtt:
        - IAMRole
        - Arn
      Runtime: python3.7
      Handler: HW.lambda_handler
      Tags:
      - Key: user
        Value:
          Ref: TagUser
      - Key: stelligent-u-lesson
        Value:
          Ref: TagLesson
      - Key: stelligent-u-lab
        Value:
          Ref: TagLab
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - Lambda
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RESTAPI}/*/POST/
  METHOD:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
        - StatusCode: 200
        IntegrationHttpMethod: POST
        Type: AWS
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn:
              Fn::GetAtt:
              - Lambda
              - Arn
      MethodResponses:
      - StatusCode: 200
      HttpMethod: POST
      ResourceId:
        Fn::GetAtt:
        - RESTAPI
        - RootResourceId
      RestApiId:
        Ref: RESTAPI
  RESTAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name:
        Ref: TagUser
      Tags:
      - Key: user
        Value:
          Ref: TagUser
      - Key: stelligent-u-lesson
        Value:
          Ref: TagLesson
      - Key: stelligent-u-lab
        Value:
          Ref: TagLab
  DEPLOYMENT:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: RESTAPI
    DependsOn:
    - METHOD
Outputs:
  APIGatewayResourceId:
    Description: Data
    Value:
      Fn::GetAtt:
      - RESTAPI
      - RootResourceId
  APIGatewayID:
    Description: Data
    Value:
      Ref: RESTAPI
