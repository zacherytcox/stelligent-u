Parameters:
  TagUser:
    Type: String
  TagLesson:
    Type: String
  TagLab:
    Type: String
  KeyName:
    Type: String
  AMI:
    Type: String
    Default: ami-0a5e7c9183d1cea27
  PubSubnet1:
    Type: String
    Default: subnet-096031e6563c7d6d8
  PubSubnet2:
    Type: String
    Default: subnet-0190811066e467650
  VPCID:
    Type: String
    Default: vpc-09086bd809915d7f3
  KeyName:
    Type: String
    Default: zacherycox
    
Resources:
  ECS:
    Type: AWS::ECS::Cluster
    Properties: 
      # CapacityProviders: 
      #   - !Ref ECSProvider
      Tags:   
        - Key: user
          Value: !Ref TagUser
        - Key: Name
          Value: !Ref TagUser
        - Key: stelligent-u-lesson
          Value: !Ref TagLesson
        - Key: stelligent-u-lab
          Value: !Ref TagLab
  # ECSProvider:
  #   Type: AWS::ECS::CapacityProvider
  #   Properties: 
  #     AutoScalingGroupProvider: 
  #         AutoScalingGroupArn: !Ref AutoScaling
  #         ManagedScaling:
  #               MaximumScalingStepSize: 1
  #               MinimumScalingStepSize: 1
  #               Status: ENABLED
  #               TargetCapacity: 100
  #     Tags:  
  #       - Key: user
  #         Value: !Ref TagUser
  #       - Key: Name
  #         Value: !Ref TagUser
  #       - Key: stelligent-u-lesson
  #         Value: !Ref TagLesson
  #       - Key: stelligent-u-lab
  #         Value: !Ref TagLab
  # AutoScaling:
  #   Type: AWS::AutoScaling::AutoScalingGroup
  #   Properties:
  #     VPCZoneIdentifier: 
  #       - !Ref PubSubnet1
  #       - !Ref PubSubnet2
  #     LaunchConfigurationName: !Ref AutoScalingGroupLG
  #     MinSize: 1
  #     MaxSize: 1
  #     DesiredCapacity: 1
  #     Tags:
  #       -
  #         Key: Name
  #         Value: !Ref TagUser
  #         PropagateAtLaunch: true
  #       -
  #         Key: user
  #         Value: !Ref TagUser
  #         PropagateAtLaunch: true
  #       -
  #         Key: stelligent-u-lesson
  #         Value: !Ref TagLesson
  #         PropagateAtLaunch: true
  #       -
  #         Key: stelligent-u-lab
  #         Value: !Ref TagLab
  #         PropagateAtLaunch: true
  SG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Description cannot be empty...
      # SecurityGroupEgress:
      #   - CidrIp: 0.0.0.0/0
      #     IpProtocol: tcp
      #     ToPort: 80
      #     FromPort: 80
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
          ToPort: -1
          FromPort: -1
      Tags:   
        - Key: user
          Value: !Ref TagUser
        - Key: Name
          Value: !Ref TagUser
        - Key: stelligent-u-lesson
          Value: !Ref TagLesson
        - Key: stelligent-u-lab
          Value: !Ref TagLab
      VpcId: !Ref VPCID
  # AutoScalingGroupLG:
  #   Type: AWS::AutoScaling::LaunchConfiguration
  #   Properties: 
  #     ImageId: !Ref AMI
  #     InstanceType: t2.micro
  #     SecurityGroups: 
  #       - !Ref SG
  #     KeyName: !Ref KeyName
  #     IamInstanceProfile: !Ref InstanceProfile
  #     UserData: 
  #       Fn::Base64: !Sub |
  #         #!/bin/bash
  #         echo ECS_CLUSTER=${ECS} >> /etc/ecs/ecs.config
  # InstanceProfile:
  #   Type: AWS::IAM::InstanceProfile
  #   Properties: 
  #     Roles: 
  #       - !Ref Role
  # Role:
  #   Type: AWS::IAM::Role
  #   Properties: 
  #     AssumeRolePolicyDocument: 
  #       Statement:
  #         - Action: sts:AssumeRole
  #           Effect: Allow
  #           Principal:
  #             Service: ec2.amazonaws.com
  #       Version: "2012-10-17"
  #     ManagedPolicyArns: 
  #       - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
  #     Tags:    
  #       - Key: user
  #         Value: !Ref TagUser
  #       - Key: Name
  #         Value: !Ref TagUser
  #       - Key: stelligent-u-lesson
  #         Value: !Ref TagLesson
  #       - Key: stelligent-u-lab
  #         Value: !Ref TagLab
  CloudwatchLogsGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join 
        - '-'
        - - ECSLogGroup
          - !Ref 'AWS::StackName'
      RetentionInDays: 7
  TaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties: 
      ExecutionRoleArn:
        !GetAtt MyAppTaskDefExecutionRole.Arn
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Name: MyContainerName
          PortMappings:
            - ContainerPort: 80
          # Cpu: 256
          # Memory: 512
          Essential: 'true'
          Image: !ImportValue lab13-zach-ecr-Uri
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: ecs-test-app
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Tags: 
        - Key: user
          Value: !Ref TagUser
        - Key: Name
          Value: !Ref TagUser
        - Key: stelligent-u-lesson
          Value: !Ref TagLesson
        - Key: stelligent-u-lab
          Value: !Ref TagLab

  # ClusterCPAssociation:
  #   Type: AWS::ECS::ClusterCapacityProviderAssociations
  #   Properties:
  #     Cluster: !Ref ECS
  #     CapacityProviders:
  #       - !Ref ECSProvider
  #     DefaultCapacityProviderStrategy:
  #       - CapacityProvider: !Ref ECSProvider
  #         Weight: 1

  MyAppTaskDefExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: 
                - ecs-tasks.amazonaws.com
                - ecs.amazonaws.com
        Version: "2012-10-17"
  MyAppTaskDefExecutionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:*
              - elasticloadbalancing:*
              - ec2:*
              - ecr:*
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MyAppTaskDefExecutionRoleDefaultPolicy
      Roles:
        - Ref: MyAppTaskDefExecutionRole

  ELBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      HealthCheckPath: "/"
      # HealthCheckPort: "traffic-port"
      HealthCheckProtocol: "HTTP"
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Matcher: 
          HttpCode: "200"
      HealthCheckEnabled: true
      VpcId: !Ref VPCID
      TargetType: ip

  ApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Scheme: "internet-facing"
      Type: "application"
      SecurityGroups:
        - !GetAtt SG.GroupId
      Subnets:
        - !Ref PubSubnet1
        - !Ref PubSubnet2
      IpAddressType: "ipv4"

  HTTPListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: "HTTP"
      DefaultActions: 
        - Order: 1
          TargetGroupArn: !Ref ELBTargetGroup
          Type: "forward"

  Service:
    Type: AWS::ECS::Service
    Properties: 
      Cluster: !Ref ECS
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: MyContainerName
          ContainerPort: '80'
          TargetGroupArn: !Ref ELBTargetGroup
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: 
            - !Ref SG
          Subnets: 
            - !Ref PubSubnet1
            - !Ref PubSubnet2
      PropagateTags: TASK_DEFINITION
      TaskDefinition: !Ref TaskDef
      # Role: !Ref MyAppTaskDefExecutionRole
      Tags: 
        - Key: user
          Value: !Ref TagUser
        - Key: Name
          Value: !Ref TagUser
        - Key: stelligent-u-lesson
          Value: !Ref TagLesson
        - Key: stelligent-u-lab
          Value: !Ref TagLab
    DependsOn:
      - HTTPListener
      - ApplicationLoadBalancer

Outputs:
  LoadBalancerURL:
    Description: ALB URL
    Value: !GetAtt ApplicationLoadBalancer.DNSName
  # ECR1:
  #   Description: ECR Name
  #   Value: !Ref ECR
  #   Export:
  #     Name: !Sub "${AWS::StackName}-Name"
#   ECR2:
#     Description: "ECR Arn"
#     Value: !GetAtt ECR.Arn
#     Export:
#       Name: !Sub "${AWS::StackName}-Arn"
#   ECR3:
#     Description: "ECR Uri"
#     Value: !GetAtt ECR.RepositoryUri
#     Export:
#       Name: !Sub "${AWS::StackName}-Uri"
  